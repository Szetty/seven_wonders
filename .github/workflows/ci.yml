name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  core:
    name: Core
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: core
    steps:
    - name: Setup Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: 1.51.0
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.11.0'
        otp-version: '22.3'
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
  backend:
    name: Backend
    runs-on: ubuntu-latest
    env:
      ACCESS_TOKEN: "TEST"
      JWT_SECRET: "test"
    defaults:
      run:
        working-directory: backend
    steps:
    - name: Setup Rust
      uses: ATiltedTree/setup-rust@v1
      with:
        rust-version: 1.51.0
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.11.0'
        otp-version: '22.3'
    - uses: actions/checkout@v2
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Run tests
      run: mix test
  old_backend:
    name: Old Backend
    runs-on: ubuntu-latest
    env:
      ACCESS_TOKEN: "TEST"
      JWT_SECRET: "test"
    defaults:
      run:
        working-directory: backend_old
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Test
      run: go test ./...
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
    - uses: jorelali/setup-elm@v3
      with:
        elm-version: 0.19.1
    - uses: actions/checkout@v2
    - run: npm install
    - run: sudo npm install -g elm-github-install create-elm-app@4.2.16 --unsafe-perm=true
    - run: elm-app build
    - run: elm-app test
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    env:
      ACCESS_TOKEN: "TEST"
      JWT_SECRET: "test"
      LOG_LEVEL: "error"
    defaults:
      run:
        working-directory: integration-tests
    needs: [old_backend]
    steps:
      - uses: actions/checkout@v2
      - run: cd ../backend_old && go build && cd ../integration-tests
      - run: npm install
      - run: ../backend_old/backend_old & npm test